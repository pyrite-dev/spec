<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE Specification SYSTEM "xml2txt.dtd">
<Specification>
	<Author>
		<Name>Nishi</Name>
		<Organization>Pyrite Development Team</Organization>
		<Email>nishi@nishi.boats</Email>
	</Author>
	<Meta>
		<Date>June 2025</Date>
		<Title>The GoldFish Secure Layer</Title>
		<Short>GFSL</Short>
		<Organization>Pyrite Development Team</Organization>
		<Authors>Nishi</Authors>
	</Meta>
	<Section Name="Abstract">
		<Content>
			The GoldFish Secure Layer (GFSL) allows both a client and the server to transfer data securely without implementing TLS/SSL.
		</Content>
	</Section>
	<TOC />
	<Numbered>
		<Section Name="Introduction">
			<Section Name="Purpose">
				<Content>
					The GoldFish Secure Layer (GFSL) allows both a client and the server to transfer data securely without implementing TLS/SSL.
				</Content>
			</Section>
		</Section>
		<Section Name="Conformance Requirements">
			<Content>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.
			</Content>
			<Section Name="Terminology and Other Conventions">
				TBD
			</Section>
		</Section>
		<Section Name="Protocol Overview">
			<Center>
				<RawContent>
<![CDATA[
 Client                                                 Server 

 ClientHello
 + Version
 + Curve25519 Public Key   -------->
                                                   ServerHello
                                                     Version +
                           <--------   Curve25519 Public Key +

 ClientAccept              -------->

 [Data]                    <------->                    [Data]
]]>
				</RawContent>
				<Content>
					Fig 1. Successful connection
				</Content>

				<NewPage />
				<RawContent>
<![CDATA[
 Client                                                 Server 

 ClientHello
 + Version
 + Curve25519 Public Key   -------->
                                                   ServerHello
                                                     Version +
                           <--------   Curve25519 Public Key +

 Bye                       -------->
                           <--------                       Bye
]]>
				</RawContent>
				<Content>
					Fig 2. Bad connection
				</Content>
			</Center>
			<Content>
				[Data] MUST be encrypted using AES256 with X25519 shared key as round key.
			</Content>
			<Section Name="ClientHello Command">
				<Content>
					Usage: ClientHello &lt;Version&gt; &lt;Public Key&gt;
				</Content>
				<Content>
					Sends version information and public key.
					&lt;Version&gt; MUST be 1.
					&lt;Public Key&gt; MUST be Curve25519 Public Key in hexadecimal format, which must be 64 bytes.
				</Content>
			</Section>
			<Section Name="ServerHello Command">
				<Content>
					Usage: ServerHello &lt;Version&gt; &lt;Public Key&gt;
				</Content>
				<Content>
					Sends version information and public key, also indicates that server has accepted the client version and public key.
					&lt;Version&gt; MUST be 1.
					&lt;Public Key&gt; MUST be Curve25519 Public Key in hexadecimal format, which must be 64 bytes.
				</Content>
			</Section>
			<Section Name="ClientAccept Command">
				<Content>
					Usage: ClientAccept
				</Content>
				<Content>
					Indicate the version was accepted, and the public key was also accepted.
				</Content>
			</Section>
			<Section Name="Bye Command">
				<Content>
					Usage: Bye
				</Content>
				<Content>
					Request disconnect.
				</Content>
			</Section>
		</Section>
	</Numbered>
</Specification>
